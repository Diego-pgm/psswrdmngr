import os
import pandas as pd
from random import sample
from bullet import Password
import mysql.connector as sql


def menu():
    os.system('clear')
    print('=====================Anton Credential Manager==========================')
    print('Menu Options:\n\
            1) Generate password\n\
            2) Add user:password\n\
            3) Show passwords\n\
            4) Show by username/application\n\
            5) Delete credentials\n\
            0) Exit Password Manager')
    opt = int(input('anton> '))
    return opt

def gen_passwd():
    upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    lower = 'abcdefghijklmnopqrstuvwxyz'
    numb = '1234567890'
    simb = './!@#$%^&*)(,.?'
    addup = simb + upper + lower + numb
    length = input('\n[+] How long should the key be?\nanton> length = ')
    psswd = ''.join(sample(addup, int(length)))
    return psswd

def connect_mysql(user, password):
    try:
        db = sql.connect(host='localhost', user=user, password=password, database='manager', auth_plugin="mysql_native_password") # Set auth_plugin because ubuntu...
        cursor = db.cursor()
        con = True
    except Exception as e:
        db = sql.connect(host='localhost', user=user, password=password, auth_plugin="mysql_native_password")
        cursor = db.cursor()
        cursor.execute('create database manager')
        db.commit()
        cursor.execute('create table manager(site varchar(50) not null, user varchar(50) not null, password varchar(50) not null)')
        db.commit()
        print("[+] Database and table creation complete.\n")
        con = True
    return db, cursor, con

def insert_mysql(db, cursor, psswd):
    res = input('[-] Use a password generated by Anton (Y/n)\nanton> ')
    if (res == 'y') or (res == 'yes') or (res == "Y"):
        site = input('\n[+] Please insert app name\nanton> ')
        uname = input('\n [+] Please insert the username\nanton> ')
    elif (res == 'n') or (res == 'no') or (res == "No"):
        site = input('\n[+] Please insert app name\nanton> ')
        uname = input('\n[+] Please insert the username/email\nanton> ')
        psswd = input('\n[+] Please insert the password\nanton> ')
    query = 'insert into manager values ("{}", "{}", "{}")'.format(site, uname,psswd)
    quest = input('\n[!]Are you sure you want to add:\nSite: {}\nUsername/Email: {}\nPassword: {} (Y/n)\nanton> '.format(site, uname,psswd))
    if (quest == 'y') or (quest == "yes") or (quest=="Y"):
        cursor.execute(query)
        db.commit()
    else:
        pass

def print_df(df):
    os.system('clear')
    print('=====================Anton Credential Manager==========================')
    print(df)
    print("\n")
    input('PRESS ENTER TO RETURN TO MENU')

def print_results(db):
    df = pd.read_sql("select * from manager order by user asc", db)
    df = df.rename(columns={'site':'Application', 'user':'Username/Email', 'password':'Password'})
    print_df(df)

def filter_results(db):
    quest = input('\n[+] Search by user or app name? (u/a)\nanton> ')
    try:
        if quest == 'u':
            quest2 = input('\n[+] Enter username\nanton> ')
            query = 'select * from manager where user like "%{}%"'.format(quest2)
            df = pd.read_sql(query, db)
        elif quest == 'a':
            quest2 = input('\n[+] Enter application\nanton> ')
            query = 'select * from manager where site like "%{}%"'.format(quest2)
            df = pd.read_sql(query, db)
        df = df.rename(columns={'site':'Application', 'user':'Username/Email', 'password':'Password'})
        print_df(df)
    except Exception as e:
        print('[-] Press enter a valid option')
        input('PRESS ENTER TO RETURN TO MENU')


def delete_user(db, cursor):
    site = input('\n[+] Please insert the Application you want to delete\nanton> ')
    username=input('\n[+] Please insert the Username you want to delete\nanton> ')
    preg = input('\n[!] Are you sure?(Y/n)\nanton> ')
    if (preg=="y") or (preg=="Y") or (preg=="yes"):
        query = 'delete from manager where user="{}" and site="{}"'.format(username,site)
        try: 
            cursor.execute(query)
            db.commit()
            print('User {} deleted successfully'.format(username))
        except Exception as e:
            print('There are no credentials that match your input.')
            input('PRESS ENTER TO CONTINUE')
    else:
        pass

try:
    psswd = ""
    usr = input("Mysql username: ")
    cli = Password(prompt="Mysql password: ", hidden="")
    pwd = cli.launch()
    print(pwd)
    db, cursor, con = connect_mysql(usr, pwd)
except Exception as e:
    print('Wrong credentials, bye.')

if con:
    while True: 
        opt = menu()
        if opt == 0:
            quit()
        elif opt == 1:
            psswd = gen_passwd()
            print('[+] The password generated is: ', psswd,'\n')
            input('PRESS ENTER TO CONTINUE')
        elif opt == 2:
            insert_mysql(db, cursor, psswd)
        elif opt == 3:
            print_results(db)
        elif opt == 4:
            filter_results(db)
        elif opt == 5:
            delete_user(db, cursor)
        else:
            print('[-] Please enter a valid option.')
            continue